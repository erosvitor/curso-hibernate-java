====================================================================================================
CURSO HIBERNATE E JAVA - MANY-TO-MANY - MAPPING
====================================================================================================


Mapeando o relacionamento
----------------------------------------------------------------------------------------------------
- Criar o arquivo 'Syndic.java' no pacote 'com.ctseducare.condominium.entity'

@Entity
@Table(name = "syndics")
public class Syndic implements Serializable {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer id;
    @Column(name = "name", length = 80, nullable = false)
    private String name;
    @ManyToMany(cascade = { CascadeType.ALL })
    @JoinTable(
            name = "syndics_condominiums",
            joinColumns = { @JoinColumn(name = "id_syndic") },
            inverseJoinColumns = { @JoinColumn(name = "id_condominium") }
    )
    Set<Condominium> condominiums = new HashSet<>();
    
    // Getters and Setters
    
    // Equals and Hashcode
    
}


- Acrescentar as seguintes linhas no arquivo 'Condominium.java'

    ...
    @ManyToMany(mappedBy = "condominiums")
    private Set<Syndic> syndics = new HashSet<>();
    ...
    
    Obs: Criar os m√©todos getter e setter
    

Disponibilizando o mapeamento
----------------------------------------------------------------------------------------------------
- Adicionar as linhas no arquivo 'HibernateUtils.java'

  ...
  metadataSources.addAnnotatedClass(Syndic.class);
  ...


Criando o DAO
----------------------------------------------------------------------------------------------------
- Criar o arquivo 'SyndicDAO.java' no pacote 'com.ctseducare.condominium.dao'

public class SyndicDAO extends DAO<Syndic> {

    public SyndicDAO() { super(Syndic.class); }

}


